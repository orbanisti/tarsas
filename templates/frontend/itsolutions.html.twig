{% extends 'base.html.twig' %}
{% block title %} {{ 'IT Megoldások'|trans }} {% endblock %}
{% block body %}
    <div class="container-fluid jumbotron-bg position-relative scroll"
         style=" background: linear-gradient(rgba(34, 70, 148, 0.5), rgba(34, 70, 148, 0.5)), url({{ asset('build/images/it-solutions.png') }}) 0 -100px;min-height: 600px;">
        <div class="row">
            <div class="primary-overlay-div"></div>
            <div class="container mt-5">
                <div class="row">

                    <div class="col-md-6 text-left animate__animated animate__fadeInRight">
                        <h1 class="mb-5 text-big text-white fadeInTextAnimation">{{ 'IT Solutions'|trans }}</h1>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="row p-5 bg-white">
            <div class="col-md-12 ">
                <h2 class="text-left text-dark animate__animated animate__fadeIn text-medium text-normal-sm mb-0 lettersAnimation">{{ 'Az IT Solutions egyidős az Everesttel, hiszen mindannyian tudjuk, hogy a mai világban célkitűzéseink eléréséhez már nélkülözhetetlen egy erős digitális háttér.'|trans }}
                </h2>
            </div>
        </div>
    </div>
    <div class="container-fluid bg-primary text-white pt-5 pb-5">
        <div class="container">
            <div class="row">
                <div class="col-md-12 text-center" data-aos="fade-down">
                    <h1 class="mobileSmallerHeading">{{ 'Mérföldköveink'|trans }}</h1>
                </div>
            </div>
        </div>
        <img id="timelineImage" src="" class="pcTimeline" style="width: 109%" lazy-src="{{ asset('build/images/result2.gif') }}">
        {{ include('frontend/embed/timeline.html.twig') }}
    </div>
    <div class="container mt-5 p-3">
        <div class="row">
            <div class="col-md-12">
                <h2>
                    {{ 'Egyedi ERP szoftver'|trans }}
                </h2>
                <p>
                    {{ 'Egyedileg, az igények és célok szerint készül a szoftver, ezáltal nem kell a megrendelőnek alkalmazkodnia egy „dobozos” termékhez.'|trans }}
                </p>


            </div>
        </div>
    </div>
    <div class="container">
        {{ include('frontend/steps.html.twig') }}
    </div>
    <div class="container-fluid mt-5 pt-lg-5 pt-md-5 pt-3 pb-5 bg-primary" id="contact">
        <div class="container mt-5 mb-5">
            <div class="row ">
                <div class="col-md-12 ">
                    <h1 class="text-white text-medium-sm">{{ 'Segíthetünk?'|trans }}</h1>
                    <p class="text-white mt-5">
                        {{ 'Írjon nekünk és kollégánk 24 órán belül felveszi Önnel a kapcsolatot, hogy minden kérdésére választ kapjon!'|trans }}
                    </p>
                </div>
                <div class="col-md-12 mt-5 mb-5">
                    {{ include('frontend/embed/contactForm.html.twig') }}
                </div>
            </div>
        </div>
    </div>
    <style>
        @media (min-width: 767px) {
            .mobileTimeline {
                display: none;
            }

            .pcTimeline {
                display: block;
            }
        }

        @media (max-width: 768px) {
            .pcTimeline {
                display: none;
            }

            .mobileTimeline {
                display: block;
            }
        }
    </style>
{% endblock %}
    {% block javascripts %}
        <script>
            //Parallax

            // (function () {
            //
            //     // VARIABLES
            //     const timeline = document.querySelector(".timeline ol"),
            //         elH = document.querySelectorAll(".timeline li > div"),
            //         arrows = document.querySelectorAll(".timeline .arrows .arrow"),
            //         arrowPrev = document.querySelector(".timeline .arrows .arrow__prev"),
            //         arrowNext = document.querySelector(".timeline .arrows .arrow__next"),
            //         firstItem = document.querySelector(".timeline li:first-child"),
            //         lastItem = document.querySelector(".timeline li:last-child"),
            //         xScrolling = 280,
            //         disabledClass = "disabled";
            //
            //     // START
            //     window.addEventListener("load", init);
            //
            //     function init() {
            //         setEqualHeights(elH);
            //         animateTl(xScrolling, arrows, timeline);
            //         setSwipeFn(timeline, arrowPrev, arrowNext);
            //         setKeyboardFn(arrowPrev, arrowNext);
            //     }
            //
            //     // SET EQUAL HEIGHTS
            //     function setEqualHeights(el) {
            //         let counter = 0;
            //         for (let i = 0; i < el.length; i++) {
            //             if (window.CP.shouldStopExecution(0)) break;
            //             const singleHeight = el[i].offsetHeight;
            //
            //             if (counter < singleHeight) {
            //                 counter = singleHeight;
            //             }
            //         }
            //         window.CP.exitedLoop(0);
            //
            //         for (let i = 0; i < el.length; i++) {
            //             if (window.CP.shouldStopExecution(1)) break;
            //             el[i].style.height = `${counter}px`;
            //         }
            //         window.CP.exitedLoop(1);
            //     }
            //
            //     // CHECK IF AN ELEMENT IS IN VIEWPORT
            //     // http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport
            //     function isElementInViewport(el) {
            //         const rect = el.getBoundingClientRect();
            //         return (
            //             rect.top >= 0 &&
            //             rect.left >= 0 &&
            //             rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
            //             rect.right <= (window.innerWidth || document.documentElement.clientWidth));
            //
            //     }
            //
            //     // SET STATE OF PREV/NEXT ARROWS
            //     function setBtnState(el, flag = true) {
            //         if (flag) {
            //             el.classList.add(disabledClass);
            //         } else {
            //             if (el.classList.contains(disabledClass)) {
            //                 el.classList.remove(disabledClass);
            //             }
            //             el.disabled = false;
            //         }
            //     }
            //
            //     // ANIMATE TIMELINE
            //     function animateTl(scrolling, el, tl) {
            //         let counter = 0;
            //         for (let i = 0; i < el.length; i++) {
            //             if (window.CP.shouldStopExecution(2)) break;
            //             el[i].addEventListener("click", function () {
            //                 if (!arrowPrev.disabled) {
            //                     arrowPrev.disabled = true;
            //                 }
            //                 if (!arrowNext.disabled) {
            //                     arrowNext.disabled = true;
            //                 }
            //                 const sign = this.classList.contains("arrow__prev") ? "" : "-";
            //                 if (counter === 0) {
            //                     tl.style.transform = `translateX(-${scrolling}px)`;
            //                 } else {
            //                     const tlStyle = getComputedStyle(tl);
            //                     // add more browser prefixes if needed here
            //                     const tlTransform = tlStyle.getPropertyValue("-webkit-transform") || tlStyle.getPropertyValue("transform");
            //                     const values = parseInt(tlTransform.split(",")[4]) + parseInt(`${sign}${scrolling}`);
            //                     tl.style.transform = `translateX(${values}px)`;
            //                 }
            //
            //                 setTimeout(() => {
            //                     isElementInViewport(firstItem) ? setBtnState(arrowPrev) : setBtnState(arrowPrev, false);
            //                     isElementInViewport(lastItem) ? setBtnState(arrowNext) : setBtnState(arrowNext, false);
            //                 }, 1100);
            //
            //                 counter++;
            //             });
            //         }
            //         window.CP.exitedLoop(2);
            //     }
            //
            //     // ADD SWIPE SUPPORT FOR TOUCH DEVICES
            //     function setSwipeFn(tl, prev, next) {
            //         const hammer = new Hammer(tl);
            //         hammer.on("swipeleft", () => next.click());
            //         hammer.on("swiperight", () => prev.click());
            //     }
            //
            //     // ADD BASIC KEYBOARD FUNCTIONALITY
            //     function setKeyboardFn(prev, next) {
            //         document.addEventListener("keydown", e => {
            //             if (e.which === 37 || e.which === 39) {
            //                 const timelineOfTop = timeline.offsetTop;
            //                 const y = window.pageYOffset;
            //                 if (timelineOfTop !== y) {
            //                     window.scrollTo(0, timelineOfTop);
            //                 }
            //                 if (e.which === 37) {
            //                     prev.click();
            //                 } else if (e.which === 39) {
            //                     next.click();
            //                 }
            //             }
            //         });
            //     }
            //
            // })();
            let timeLineSwitch = true;
            $(document).ready(function () {
                // if (window.innerWidth >= 768) {
                $("#timelineImage").attr('src', $("#timelineImage").attr('lazy-src'))
                // }
            });
            $(window).scroll(function () {
                var timeLineImage = $("#timelineImage")
                var top_of_element = timeLineImage.offset().top;
                var bottom_of_element = timeLineImage.offset().top + timeLineImage.outerHeight();
                var bottom_of_screen = $(window).scrollTop() + $(window).innerHeight();
                var top_of_screen = $(window).scrollTop();

                if ((bottom_of_screen > top_of_element) && (top_of_screen < bottom_of_element)) {
                    if (timeLineSwitch) {
                        timeLineImage.attr('src', timeLineImage.attr('src'))
                        timeLineSwitch = false;
                    }
                } else {
                    timeLineSwitch = true;
                }
            });
            //

        </script>
    {% endblock %}
